version: "3.5"

services:
  app:
    image: "literal"
    container_name: "literal_app"
    build: literal
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
      - celery
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
        - variables/prod.env
    volumes:
      - ./literal/:/app/
      - static_volume:/app/static
      - media_volume:/app/mediafiles

  postgres:
    image: postgres:12.0-alpine
    container_name: "literal_postgres"
    expose:
      - 5432
    ports:
      - "5432:5432"
    env_file:
      - ./variables/prod.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    image: "literal_nginx_image"
    build: nginx
    container_name: "literal_nginx"
    ports:
      - 1337:80
    depends_on:
      - app
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles

  redis:
    container_name: "literal_redis"
    image: redis:5.0.4-alpine
    volumes:
      - redis_data:/data
    env_file:
       - ./variables/prod.env
    ports:
      - "6379:6379"
    expose:
      - 6379

  celery:
    image: "literal_celery_image"
    container_name: "literal_celery"
    build: literal
    command: celery -A literal worker -l info
    volumes:
      - celery_volume/:/usr/src/app/
      - media_volume:/app/mediafiles
    env_file:
       - ./variables/prod.env
    depends_on:
      - redis

volumes:
  postgres_data:
  static_volume:
  media_volume:
  celery_volume:
  redis_data:
